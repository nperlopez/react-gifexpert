{"version":3,"sources":["components/CategoryAdd.js","components/GifItem.js","helpers/getGifs.js","components/GifCard.js","hooks/useFetchGifs.js","components/GifExpertComponent.js","index.js"],"names":["CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","for","type","name","value","onChange","target","GifItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","fixed_width_small","GifCard","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","GifExpertComponent","cat","ReactDOM","render","document","getElementById"],"mappings":"oMAmCeA,EAhCY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACtCN,EAAc,MAIlB,SACI,sBAAKO,UAAU,YAAf,UACI,uBAAOC,IAAI,UAAX,iCACA,uBAAOC,KAAK,OACJC,KAAK,UACLC,MAAQZ,EACRa,SAlBM,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,gB,OCKhBG,EAVC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEtB,OACI,sBAAKT,UAAU,yCAAf,UACI,qBAAKU,IAAMD,EAAME,IAAMH,IACvB,4BAAKA,Q,uBCPJI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEDG,MAAMP,GAFL,cAEbQ,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,kBAAkBhB,QARxB,kBAYZW,GAZY,4CAAH,sDC0BLM,EAtBQ,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGtB,CAACd,IAEGe,EDb0BK,CAAapB,GAAjCW,EAFwB,EAE7BL,KAAaQ,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAI3B,UAAU,oCAAd,SAAoDa,IAClDc,GAAW,mBAAG3B,UAAU,mCAAb,qBACb,qBAAKA,UAAU,OAAf,SAEQwB,EAAOH,KAAI,SAAAa,GAAG,OACV,cAAC,EAAD,2BAESA,GAFT,IAGIZ,IAAKY,IAFAA,EAAIX,aEiBtBY,EA7BY,WAAO,IAAD,EACG5C,mBAAS,CAAC,SADb,mBACtBsB,EADsB,KACZvB,EADY,KAQ7B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,YAAcA,IAC3B,uBAEA,6BAEQuB,EAASQ,KAAI,SAAAe,GAAG,OACZ,cAAC,EAAD,CAEIvB,SAAWuB,GADLA,Y,MChBlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.72e99cea.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CategoryAdd = ({ setCategory }) => {\n    const [inputValue, setInputValue]= useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 0) {\n            setCategory((cats) => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <div className=\"searchBox\">\n                <label for=\"searchf\">Search GIF category</label>\n                <input type=\"text\"\n                        name=\"searchf\"\n                        value={ inputValue }\n                        onChange={ handleInputChange}\n                />\n            </div>\n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n\nexport default CategoryAdd;","import React from 'react';\n\nconst GifItem = ({ title, url }) => {\n\n    return (\n        <div className=\"item animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    );\n}\n\nexport default GifItem;","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FMh9LAQaPeV3hF1FFn6PzW2hzba37UOk`;\n    const res = await fetch(url);\n    const { data } = await res.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.fixed_width_small.url\n        }\n    });\n    \n    return gifs;\n}","import React from 'react';\nimport GifItem from './GifItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifCard = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className=\"card\">\n                {\n                    images.map(gif => (\n                        <GifItem \n                            key={gif.id}\n                            { ...gif }\n                            img={gif} />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifCard;","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport CategoryAdd from './CategoryAdd';\nimport GifCard from './GifCard';\n\nconst GifExpertComponent = () => {\n    const [category, setCategory] = useState(['Cats']);\n    \n    // const handleAdd = () => {\n    //     // setCategory([...category, 'Meneíllos']);\n    //     setCategory(cat => [...cat, 'Meneíllos']);\n    // }\n\n    return (\n        <>\n            <h1>GifExpert App</h1>\n            <CategoryAdd setCategory={ setCategory } />\n            <hr/>\n\n            <ol>\n                {\n                    category.map(cat => (\n                        <GifCard\n                            key={ cat }\n                            category={ cat }\n                        />\n                    ))\n                }\n            </ol>\n            \n        </>\n    );\n}\n\nexport default GifExpertComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertComponent from './components/GifExpertComponent';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}